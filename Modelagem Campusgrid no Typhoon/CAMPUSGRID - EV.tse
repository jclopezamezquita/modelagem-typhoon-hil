version = 4.2

//
// Saved by sw version: 2022.4 SP1
//

model "CAMPUSGRID" {
    configuration {
        hil_device = "VHIL+"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 5e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = "D:\project\t_sw\thcc"
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
    }

    component Subsystem Root {
        component "core/Grid" Grid1 {
            Sb = "10*1.3e6"
            Vb = "11900"
            f = "60"
            resistance_cont = "10.0"
        }
        [
            position = 7384, 8168
            rotation = down
            size = 144, 136
        ]

        component "core/Grid UI" "Grid UI1" {
        }
        [
            position = 7208, 8168
            rotation = down
            scale = -1, 1
            size = 56, 136
        ]

        component "core/Diesel Genset (Generic) UI" "Diesel Genset (Generic) UI1" {
        }
        [
            position = 7600, 9080
            size = 64, 152
        ]

        component "core/Diesel Genset (Generic)" "Diesel Genset (Generic)1" {
            Omega_nom = "1800"
            Pnom = "150e3"
            Snom = "160e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
            include_transformer = "True"
        }
        [
            position = 7784, 9080
            size = 184, 152
        ]

        component "core/Variable Load (Generic)" "Variable Load (Generic)1" {
            Pnom = "371e3"
            Snom = "405.5e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
            include_transformer = "True"
            resistance_cont = "1.0"
        }
        [
            position = 8184, 9080
            size = 184, 144
        ]

        component Subsystem "Variable Load (Generic) UI1" {
            layout = dynamic
            component gen_probe Enable_fb {
            }
            [
                position = 7952, 8024
            ]

            component gen_probe PFmeas {
                streaming_en = "True"
            }
            [
                position = 7600, 8200
            ]

            component src_scada_input Qref {
                execution_rate = "inherit"
                max = "1e8"
                min = "-1e8"
                unit = "pu"
            }
            [
                position = 8600, 7736
            ]

            component src_scada_input Enable {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7568
            ]

            component src_scada_input Pref {
                execution_rate = "inherit"
                max = "1e8"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 7680
            ]

            component gen_probe Vload_rms_meas_V {
                streaming_en = "True"
            }
            [
                position = 7568, 8216
            ]

            component gen_probe Qmeas_kVAr {
                streaming_en = "True"
            }
            [
                position = 7664, 8168
            ]

            component gen_probe Smeas_kVA {
            }
            [
                position = 7632, 8184
            ]

            component gen_probe Pnom_kW {
            }
            [
                position = 7856, 8072
            ]

            component gen_probe Qref_fb_kVAr {
                streaming_en = "True"
            }
            [
                position = 7888, 8056
            ]

            component gen_probe Snom_kVA {
            }
            [
                position = 7792, 8104
            ]

            component gen_probe Fmeas_Hz {
                streaming_en = "True"
            }
            [
                position = 7760, 8120
            ]

            component gen_probe Pref_fb_kW {
                streaming_en = "True"
            }
            [
                position = 7920, 8040
            ]

            component gen_probe Qnom_kVAr {
            }
            [
                position = 7824, 8088
            ]

            component gen_probe Vgrid_rms_meas_kV {
            }
            [
                position = 7728, 8136
            ]

            component gen_probe Pmeas_kW {
                streaming_en = "True"
            }
            [
                position = 7696, 8152
            ]

            component gen_probe MCB_status {
            }
            [
                position = 7536, 8232
            ]

            component gen_probe alarm_msg {
            }
            [
                position = 7504, 8248
            ]

            component src_scada_input "Reset alarms" {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7624
            ]

            component src_scada_input "Pref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7792
            ]

            component src_scada_input "Qref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7848
            ]

            component src_scada_input "P dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7904
            ]

            component src_scada_input "Q dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7960
            ]

            component src_scada_input "P(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8016
            ]

            component src_scada_input "P(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8072
            ]

            component src_scada_input "Q(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8248
            ]

            component src_scada_input "Q(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8304
            ]

            component src_scada_input "P(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8128
            ]

            component src_scada_input "P(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8192
            ]

            component src_scada_input "Q(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8360
            ]

            component src_scada_input "Q(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8416
            ]

            component "core/DER (Generic) Control Join" "DER (Generic) Control Join" {
                Enable = "True"
                F_alarm_lower_limit = "True"
                F_alarm_upper_limit = "True"
                I_alarm_upper_limit = "True"
                P_V_k1 = "True"
                P_V_k2 = "True"
                P_dependency_type = "True"
                P_f_k1 = "True"
                P_f_k2 = "True"
                Pref = "True"
                Pref_rate_of_change = "True"
                Q_V_k1 = "True"
                Q_V_k2 = "True"
                Q_dependency_type = "True"
                Q_f_k1 = "True"
                Q_f_k2 = "True"
                Qref = "True"
                Qref_rate_of_change = "True"
                Reset_alarms = "True"
                S_alarm_upper_limit = "True"
                V_alarm_lower_limit = "True"
                V_alarm_upper_limit = "True"
                component_select = "Variable Load"
            }
            [
                position = 8952, 8160
                size = 192, 368
            ]

            component "core/DER (Generic) Output Split" "DER (Generic) Output Split" {
                Enable_fb = "True"
                Fmeas_Hz = "True"
                Fref_fb_Hz = "True"
                MCB_status = "True"
                PFmeas = "True"
                Pmeas_kW = "True"
                Pnom_kW = "True"
                Pref_fb_kW = "True"
                Qmeas_kVAr = "True"
                Qnom_kVAr = "True"
                Qref_fb_kVAr = "True"
                Smeas_kVA = "True"
                Snom_kVA = "True"
                Vgrid_rms_meas_kV = "True"
                Vload_rms_meas_V = "True"
                Vrms_ref_fb_V = "True"
                alarm_msg = "True"
                component_select = "Variable Load"
            }
            [
                position = 7312, 8136
                size = 128, 288
            ]

            component "core/DER (Generic) External Join" "DER (Generic) External Join1" {
                component_select = "Variable Load"
            }
            [
                position = 8952, 8936
                size = 192, 64
            ]

            component src_scada_input "V alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8480
            ]

            component src_scada_input "V alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8536
            ]

            component src_scada_input "F alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8592
            ]

            component src_scada_input "F alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8648
            ]

            component src_scada_input "S alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8704
            ]

            component src_scada_input "I alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8760
            ]

            port ui_in {
                label = "ui_in"
                position = right:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7136, 8136
            ]

            port ui_out {
                label = "ui_out"
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9112, 8160
            ]

            port ext {
                label = "ext"
                position = right:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9128, 8936
            ]

            connect "DER (Generic) Control Join.ui_out" ui_out as Connection2888
            connect Enable.out "DER (Generic) Control Join.Enable" as Connection2889
            connect "Reset alarms.out" "DER (Generic) Control Join.Reset alarms" as Connection2890
            [
                position = 0, 0
                breakpoints = 8832, 7752; 8832, 8008
            ]
            connect Pref.out "DER (Generic) Control Join.Pref" as Connection2891
            [
                position = 0, 0
                breakpoints = 8824, 7808; 8824, 8024
            ]
            connect Qref.out "DER (Generic) Control Join.Qref" as Connection2892
            [
                position = 0, 0
                breakpoints = 8816, 7864; 8816, 8040
            ]
            connect "Pref rate of change.out" "DER (Generic) Control Join.Pref rate of change" as Connection2893
            [
                position = 0, 0
                breakpoints = 8808, 7920; 8808, 8056
            ]
            connect "Qref rate of change.out" "DER (Generic) Control Join.Qref rate of change" as Connection2894
            [
                position = 0, 0
                breakpoints = 8800, 7976; 8800, 8072
            ]
            connect "P dependency type.out" "DER (Generic) Control Join.P dependency type" as Connection2895
            [
                position = 0, 0
                breakpoints = 8792, 8032; 8792, 8088
            ]
            connect "Q dependency type.out" "DER (Generic) Control Join.Q dependency type" as Connection2896
            [
                position = 0, 0
                breakpoints = 8784, 8088; 8784, 8104
            ]
            connect "P(V) k1.out" "DER (Generic) Control Join.P(V) k1" as Connection2897
            [
                position = 0, 0
                breakpoints = 8776, 8040; 8776, 8120
            ]
            connect "P(V) k2.out" "DER (Generic) Control Join.P(V) k2" as Connection2898
            [
                position = 0, 0
                breakpoints = 8768, 8096; 8768, 8136
            ]
            connect "Q(f) k2.out" "DER (Generic) Control Join.Q(f) k2" as Connection2899
            [
                position = 0, 0
                breakpoints = 8792, 8416; 8792, 8232
            ]
            connect "Q(f) k1.out" "DER (Generic) Control Join.Q(f) k1" as Connection2900
            [
                position = 0, 0
                breakpoints = 8784, 8360; 8784, 8216
            ]
            connect "Q(V) k2.out" "DER (Generic) Control Join.Q(V) k2" as Connection2901
            [
                position = 0, 0
                breakpoints = 8776, 8304; 8776, 8200
            ]
            connect "Q(V) k1.out" "DER (Generic) Control Join.Q(V) k1" as Connection2902
            [
                position = 0, 0
                breakpoints = 8768, 8248; 8768, 8184
            ]
            connect "P(f) k2.out" "DER (Generic) Control Join.P(f) k2" as Connection2903
            [
                position = 0, 0
                breakpoints = 8760, 8192; 8760, 8168
            ]
            connect "P(f) k1.out" "DER (Generic) Control Join.P(f) k1" as Connection2904
            [
                position = 0, 0
                breakpoints = 8632, 8128; 8760, 8128; 8760, 8152
            ]
            connect ui_in "DER (Generic) Output Split.ui_in" as Connection2905
            connect Enable_fb.in "DER (Generic) Output Split.Enable_fb" as Connection2906
            connect "DER (Generic) Output Split.Pref_fb_kW" Pref_fb_kW.in as Connection2907
            connect Qref_fb_kVAr.in "DER (Generic) Output Split.Qref_fb_kVAr" as Connection2908
            connect "DER (Generic) Output Split.Pnom_kW" Pnom_kW.in as Connection2911
            connect Qnom_kVAr.in "DER (Generic) Output Split.Qnom_kVAr" as Connection2912
            connect "DER (Generic) Output Split.Snom_kVA" Snom_kVA.in as Connection2913
            connect Fmeas_Hz.in "DER (Generic) Output Split.Fmeas_Hz" as Connection2914
            connect "DER (Generic) Output Split.Vgrid_rms_meas_kV" Vgrid_rms_meas_kV.in as Connection2915
            connect "DER (Generic) Output Split.Pmeas_kW" Pmeas_kW.in as Connection2916
            connect Qmeas_kVAr.in "DER (Generic) Output Split.Qmeas_kVAr" as Connection2917
            connect "DER (Generic) Output Split.Smeas_kVA" Smeas_kVA.in as Connection2918
            connect PFmeas.in "DER (Generic) Output Split.PFmeas" as Connection2919
            connect "DER (Generic) Output Split.Vload_rms_meas_V" Vload_rms_meas_V.in as Connection2920
            connect MCB_status.in "DER (Generic) Output Split.MCB_status" as Connection2921
            connect "DER (Generic) Output Split.alarm_msg" alarm_msg.in as Connection2922
            connect ext "DER (Generic) External Join1.ext" as Connection2923
            connect "V alarm upper limit.out" "DER (Generic) Control Join.V alarm upper limit" as Connection2924
            [
                position = 0, 0
                breakpoints = 8800, 8480; 8800, 8248
            ]
            connect "V alarm lower limit.out" "DER (Generic) Control Join.V alarm lower limit" as Connection2925
            [
                position = 0, 0
                breakpoints = 8808, 8536; 8808, 8264
            ]
            connect "F alarm upper limit.out" "DER (Generic) Control Join.F alarm upper limit" as Connection2926
            [
                position = 0, 0
                breakpoints = 8816, 8592; 8816, 8280
            ]
            connect "F alarm lower limit.out" "DER (Generic) Control Join.F alarm lower limit" as Connection2927
            [
                position = 0, 0
                breakpoints = 8824, 8648; 8824, 8296
            ]
            connect "S alarm upper limit.out" "DER (Generic) Control Join.S alarm upper limit" as Connection2928
            [
                position = 0, 0
                breakpoints = 8832, 8704; 8832, 8312
            ]
            connect "I alarm upper limit.out" "DER (Generic) Control Join.I alarm upper limit" as Connection2929

            mask {
                icon = "image(\'variable_load_generic_ui.svg\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">User Interface subsystem intended to be used with \"Load (Generic)\" component.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 8024, 9080
            size = 56, 136
        ]

        component Subsystem PCC {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
            }
            [
                position = 8000, 8144
                rotation = down
                size = 64, 256
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7864, 8240
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 8112, 8240
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7864, 8144
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 8112, 8144
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7864, 8048
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 8112, 8048
                scale = -1, 1
            ]

            connect A S1.c_out as Connection1
            connect S1.b_out B as Connection2
            connect S1.a_out C as Connection3
            connect S1.c_in a as Connection4
            connect b S1.b_in as Connection5
            connect c S1.a_in as Connection6
        }
        [
            position = 7888, 8304
            size = 48, 80
        ]

        component "core/Battery ESS (Generic)" "Battery ESS (Generic)1" {
            Pnom = "810e3"
            Snom = "850e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
            nom_batt_capacity = "810"
            nom_batt_voltage = "1000"
            soc_range = "[15,100 ]"
        }
        [
            position = 8624, 9088
            size = 200, 144
        ]

        component "core/Battery ESS (Generic) UI" "Battery ESS (Generic) UI1" {
        }
        [
            position = 8424, 9088
            size = 56, 136
        ]

        component "core/PV Power Plant (Generic)" "PV Power Plant (Generic)1" {
            Pnom = "736e3"
            Snom = "750e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
        }
        [
            position = 9032, 9112
            size = 184, 136
        ]

        component "core/PV Power Plant (Generic) UI" "PV Power Plant (Generic) UI1" {
        }
        [
            position = 8832, 9112
            size = 56, 136
        ]

        component Subsystem "Core coupling" {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling 1" {
                C1 = "1.45e-8"
                R1 = "6.90e2"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
                snb_type_i = "R1-C1"
            }
            [
                position = 7736, 8088
                rotation = down
                size = 12, 256
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1.45e-8"
                R = "6.90e2"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 7936, 8288
                size = 64, 48
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7576, 7992
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 8104, 7992
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7576, 8088
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 8104, 8088
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7576, 8184
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 8096, 8184
                scale = -1, 1
            ]

            junction Junction1 pe
            [
                position = 7920, 8184
            ]

            junction Junction2 pe
            [
                position = 7936, 8088
            ]

            junction Junction3 pe
            [
                position = 7952, 7992
            ]

            connect "Core Coupling 1.a_out" A as Connection1
            connect "Core Coupling 1.b_out" B as Connection2
            connect "Core Coupling 1.c_out" C as Connection3
            connect a Junction1 as Connection11
            connect Junction1 "Core Coupling 1.a_in" as Connection12
            [
                breakpoints = 7912, 8184
            ]
            connect "RC Snubber.A" Junction1 as Connection13
            connect b Junction2 as Connection14
            connect Junction2 "Core Coupling 1.b_in" as Connection15
            connect "RC Snubber.B" Junction2 as Connection16
            connect c Junction3 as Connection17
            connect Junction3 "Core Coupling 1.c_in" as Connection18
            [
                breakpoints = 7776, 7992
            ]
            connect "RC Snubber.C" Junction3 as Connection19
        }
        [
            position = 9008, 8992
            rotation = right
            size = 48, 136
        ]

        component "core/Transmission Line" "RL coupled Grid" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00237, 0.001535, 0.001398], [0.00398, 0.00237, 0.001535], [0.001398, 0.001535, 0.00237]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "1.4573"
            R_metric = "[[0.5026, 0.1042, 0.0950], [0.1042, 0.5026, 0.0938], [0.0950, 0.0938, 0.5026]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 7616, 8304
            size = 256, 72
        ]

        component "core/Transmission Line" "RL coupled DG" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00189, 0.00109, 0.00109], [0.00109, 0.00189, 0.00109], [0.00109, 0.00109, 0.00189]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "0.2898"
            R_metric = "[[0.3570, 0.0451, 0.0451], [0.0451, 0.3570, 0.0451], [0.0451, 0.0451, 0.3570]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 7760, 8704
            rotation = left
            size = 256, 72
        ]

        component "core/Transmission Line" "RL coupled Load" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00189, 0.00109, 0.00109], [0.00109, 0.00189, 0.00109], [0.00109, 0.00109, 0.00189]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "0.2898"
            R_metric = "[[0.3570, 0.0451, 0.0451], [0.0451, 0.3570, 0.0451], [0.0451, 0.0451, 0.3570]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 8160, 8712
            rotation = left
            size = 256, 72
        ]

        component "core/Transmission Line" "RL coupled BESS" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00189, 0.00109, 0.00109], [0.00109, 0.00189, 0.00109], [0.00109, 0.00109, 0.00189]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "0.2898"
            R_metric = "[[0.3570, 0.0451, 0.0451], [0.0451, 0.3570, 0.0451], [0.0451, 0.0451, 0.3570]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 8600, 8704
            rotation = left
            size = 256, 72
        ]

        component "core/Transmission Line" "RL coupled PV" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00189, 0.00109, 0.00109], [0.00109, 0.00189, 0.00109], [0.00109, 0.00109, 0.00189]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "0.2898"
            R_metric = "[[0.3570, 0.0451, 0.0451], [0.0451, 0.3570, 0.0451], [0.0451, 0.0451, 0.3570]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 9008, 8696
            rotation = left
            size = 256, 72
        ]

        component Subsystem "Meter (DG)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 9320, 7448
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 9344, 7480
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 9368, 7512
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 9392, 7552
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 9416, 7584
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 9440, 7616
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 9464, 7648
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 9464, 7776
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 9440, 7808
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 9416, 7840
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 9392, 7872
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 9368, 7904
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 9344, 7936
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 9312, 7960
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 9344, 8048
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 9368, 8080
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 9392, 8120
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 9416, 8152
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 9440, 8184
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 9464, 8216
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 9464, 8344
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 9440, 8376
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 9416, 8408
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 9392, 8440
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 9368, 8472
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 9344, 8504
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 9216, 7712
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 9224, 8264
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 8808, 7960
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 8672, 8056
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 8952, 8056
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 8672, 7960
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 8944, 7960
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 8672, 7864
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 8944, 7864
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8880, 7800
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7712
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9088, 8264
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 7760, 8928
            rotation = right
            size = 48, 144
        ]

        component Subsystem "Meter (Load)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7872, 7424
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7896, 7456
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 7920, 7488
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 7944, 7528
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 7968, 7560
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 7992, 7592
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 8016, 7624
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 8016, 7752
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 7992, 7784
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 7968, 7816
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 7944, 7848
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 7920, 7880
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7896, 7912
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7864, 7936
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7896, 8024
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 7920, 8056
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 7944, 8096
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 7968, 8128
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 7992, 8160
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 8016, 8192
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 8016, 8320
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 7992, 8352
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 7968, 8384
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 7944, 8416
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 7920, 8448
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7896, 8480
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7768, 7688
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7776, 8240
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7360, 7936
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 8032
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7504, 8032
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7936
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7936
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7840
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7840
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7432, 7776
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7616, 7688
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7640, 8240
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 8160, 8944
            rotation = right
            size = 48, 136
        ]

        component Subsystem "Meter (BESS)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7928, 7456
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7952, 7488
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 7976, 7520
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 8000, 7560
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 8024, 7592
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 8048, 7624
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 8072, 7656
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 8072, 7784
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 8048, 7816
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 8024, 7848
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 8000, 7880
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 7976, 7912
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7952, 7944
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7920, 7968
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7952, 8056
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 7976, 8088
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 8000, 8128
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 8024, 8160
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 8048, 8192
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 8072, 8224
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 8072, 8352
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 8048, 8384
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 8024, 8416
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 8000, 8448
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 7976, 8480
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7952, 8512
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7824, 7720
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7832, 8272
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7416, 7968
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7280, 8064
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7560, 8064
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7280, 7968
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7552, 7968
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7280, 7872
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7552, 7872
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7488, 7808
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7672, 7720
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7696, 8272
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 8600, 8936
            rotation = right
            size = 48, 136
        ]

        component Subsystem "Meter (PV)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7960, 7464
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7984, 7496
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 8008, 7528
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 8032, 7568
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 8056, 7600
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 8080, 7632
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 8104, 7664
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 8104, 7792
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 8080, 7824
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 8056, 7856
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 8032, 7888
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 8008, 7920
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7984, 7952
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7952, 7976
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7984, 8064
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 8008, 8096
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 8032, 8136
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 8056, 8168
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 8080, 8200
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 8104, 8232
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 8104, 8360
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 8080, 8392
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 8056, 8424
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 8032, 8456
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 8008, 8488
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7984, 8520
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7856, 7728
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7864, 8280
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7448, 7976
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7312, 8072
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7592, 8072
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7312, 7976
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7584, 7976
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7312, 7880
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7584, 7880
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7520, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7704, 7728
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7728, 8280
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 9008, 8904
            rotation = right
            size = 48, 136
        ]

        component Subsystem "Meter (PCC)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7752, 7416
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7776, 7448
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 7800, 7480
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 7824, 7520
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 7848, 7552
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 7872, 7584
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 7896, 7616
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 7896, 7744
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 7872, 7776
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 7848, 7808
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 7824, 7840
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 7800, 7872
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7776, 7904
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7744, 7928
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7776, 8016
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 7800, 8048
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 7824, 8088
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 7848, 8120
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 7872, 8152
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 7896, 8184
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 7896, 8312
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 7872, 8344
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 7848, 8376
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 7824, 8408
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 7800, 8440
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7776, 8472
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7648, 7680
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7656, 8232
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7240, 7928
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7104, 8024
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7384, 8024
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7104, 7928
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7376, 7928
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7104, 7832
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7376, 7832
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7312, 7768
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7496, 7680
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7520, 8232
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 8160, 8408
            rotation = right
            size = 48, 72
        ]

        component "core/Variable Load (Generic)" "Variable EV1 (Generic)" {
            Pnom = "40e3"
            Snom = "41e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
            include_transformer = "True"
            resistance_cont = "1.0"
        }
        [
            position = 9408, 9088
            size = 184, 144
        ]

        component Subsystem "Variable EV1 (Generic) UI" {
            layout = dynamic
            component gen_probe Enable_fb {
            }
            [
                position = 7952, 8024
            ]

            component gen_probe PFmeas {
                streaming_en = "True"
            }
            [
                position = 7600, 8200
            ]

            component src_scada_input Qref {
                execution_rate = "inherit"
                max = "1e8"
                min = "-1e8"
                unit = "pu"
            }
            [
                position = 8600, 7736
            ]

            component src_scada_input Enable {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7568
            ]

            component src_scada_input Pref {
                execution_rate = "inherit"
                max = "1e8"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 7680
            ]

            component gen_probe Vload_rms_meas_V {
                streaming_en = "True"
            }
            [
                position = 7568, 8216
            ]

            component gen_probe Qmeas_kVAr {
                streaming_en = "True"
            }
            [
                position = 7664, 8168
            ]

            component gen_probe Smeas_kVA {
            }
            [
                position = 7632, 8184
            ]

            component gen_probe Pnom_kW {
            }
            [
                position = 7856, 8072
            ]

            component gen_probe Qref_fb_kVAr {
                streaming_en = "True"
            }
            [
                position = 7888, 8056
            ]

            component gen_probe Snom_kVA {
            }
            [
                position = 7792, 8104
            ]

            component gen_probe Fmeas_Hz {
                streaming_en = "True"
            }
            [
                position = 7760, 8120
            ]

            component gen_probe Pref_fb_kW {
                streaming_en = "True"
            }
            [
                position = 7920, 8040
            ]

            component gen_probe Qnom_kVAr {
            }
            [
                position = 7824, 8088
            ]

            component gen_probe Vgrid_rms_meas_kV {
            }
            [
                position = 7728, 8136
            ]

            component gen_probe Pmeas_kW {
                streaming_en = "True"
            }
            [
                position = 7696, 8152
            ]

            component gen_probe MCB_status {
            }
            [
                position = 7536, 8232
            ]

            component gen_probe alarm_msg {
            }
            [
                position = 7504, 8248
            ]

            component src_scada_input "Reset alarms" {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7624
            ]

            component src_scada_input "Pref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7792
            ]

            component src_scada_input "Qref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7848
            ]

            component src_scada_input "P dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7904
            ]

            component src_scada_input "Q dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7960
            ]

            component src_scada_input "P(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8016
            ]

            component src_scada_input "P(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8072
            ]

            component src_scada_input "Q(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8248
            ]

            component src_scada_input "Q(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8304
            ]

            component src_scada_input "P(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8128
            ]

            component src_scada_input "P(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8192
            ]

            component src_scada_input "Q(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8360
            ]

            component src_scada_input "Q(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8416
            ]

            component "core/DER (Generic) Control Join" "DER (Generic) Control Join" {
                Enable = "True"
                F_alarm_lower_limit = "True"
                F_alarm_upper_limit = "True"
                I_alarm_upper_limit = "True"
                P_V_k1 = "True"
                P_V_k2 = "True"
                P_dependency_type = "True"
                P_f_k1 = "True"
                P_f_k2 = "True"
                Pref = "True"
                Pref_rate_of_change = "True"
                Q_V_k1 = "True"
                Q_V_k2 = "True"
                Q_dependency_type = "True"
                Q_f_k1 = "True"
                Q_f_k2 = "True"
                Qref = "True"
                Qref_rate_of_change = "True"
                Reset_alarms = "True"
                S_alarm_upper_limit = "True"
                V_alarm_lower_limit = "True"
                V_alarm_upper_limit = "True"
                component_select = "Variable Load"
            }
            [
                position = 8952, 8160
                size = 192, 368
            ]

            component "core/DER (Generic) Output Split" "DER (Generic) Output Split" {
                Enable_fb = "True"
                Fmeas_Hz = "True"
                Fref_fb_Hz = "True"
                MCB_status = "True"
                PFmeas = "True"
                Pmeas_kW = "True"
                Pnom_kW = "True"
                Pref_fb_kW = "True"
                Qmeas_kVAr = "True"
                Qnom_kVAr = "True"
                Qref_fb_kVAr = "True"
                Smeas_kVA = "True"
                Snom_kVA = "True"
                Vgrid_rms_meas_kV = "True"
                Vload_rms_meas_V = "True"
                Vrms_ref_fb_V = "True"
                alarm_msg = "True"
                component_select = "Variable Load"
            }
            [
                position = 7312, 8136
                size = 128, 288
            ]

            component "core/DER (Generic) External Join" "DER (Generic) External Join1" {
                component_select = "Variable Load"
            }
            [
                position = 8952, 8936
                size = 192, 64
            ]

            component src_scada_input "V alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8480
            ]

            component src_scada_input "V alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8536
            ]

            component src_scada_input "F alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8592
            ]

            component src_scada_input "F alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8648
            ]

            component src_scada_input "S alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8704
            ]

            component src_scada_input "I alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8760
            ]

            port ui_in {
                label = "ui_in"
                position = right:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7136, 8136
            ]

            port ui_out {
                label = "ui_out"
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9112, 8160
            ]

            port ext {
                label = "ext"
                position = right:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9128, 8936
            ]

            connect "DER (Generic) Control Join.ui_out" ui_out as Connection2888
            connect Enable.out "DER (Generic) Control Join.Enable" as Connection2889
            connect "Reset alarms.out" "DER (Generic) Control Join.Reset alarms" as Connection2890
            [
                position = 0, 0
                breakpoints = 8832, 7752; 8832, 8008
            ]
            connect Pref.out "DER (Generic) Control Join.Pref" as Connection2891
            [
                position = 0, 0
                breakpoints = 8824, 7808; 8824, 8024
            ]
            connect Qref.out "DER (Generic) Control Join.Qref" as Connection2892
            [
                position = 0, 0
                breakpoints = 8816, 7864; 8816, 8040
            ]
            connect "Pref rate of change.out" "DER (Generic) Control Join.Pref rate of change" as Connection2893
            [
                position = 0, 0
                breakpoints = 8808, 7920; 8808, 8056
            ]
            connect "Qref rate of change.out" "DER (Generic) Control Join.Qref rate of change" as Connection2894
            [
                position = 0, 0
                breakpoints = 8800, 7976; 8800, 8072
            ]
            connect "P dependency type.out" "DER (Generic) Control Join.P dependency type" as Connection2895
            [
                position = 0, 0
                breakpoints = 8792, 8032; 8792, 8088
            ]
            connect "Q dependency type.out" "DER (Generic) Control Join.Q dependency type" as Connection2896
            [
                position = 0, 0
                breakpoints = 8784, 8088; 8784, 8104
            ]
            connect "P(V) k1.out" "DER (Generic) Control Join.P(V) k1" as Connection2897
            [
                position = 0, 0
                breakpoints = 8776, 8040; 8776, 8120
            ]
            connect "P(V) k2.out" "DER (Generic) Control Join.P(V) k2" as Connection2898
            [
                position = 0, 0
                breakpoints = 8768, 8096; 8768, 8136
            ]
            connect "Q(f) k2.out" "DER (Generic) Control Join.Q(f) k2" as Connection2899
            [
                position = 0, 0
                breakpoints = 8792, 8416; 8792, 8232
            ]
            connect "Q(f) k1.out" "DER (Generic) Control Join.Q(f) k1" as Connection2900
            [
                position = 0, 0
                breakpoints = 8784, 8360; 8784, 8216
            ]
            connect "Q(V) k2.out" "DER (Generic) Control Join.Q(V) k2" as Connection2901
            [
                position = 0, 0
                breakpoints = 8776, 8304; 8776, 8200
            ]
            connect "Q(V) k1.out" "DER (Generic) Control Join.Q(V) k1" as Connection2902
            [
                position = 0, 0
                breakpoints = 8768, 8248; 8768, 8184
            ]
            connect "P(f) k2.out" "DER (Generic) Control Join.P(f) k2" as Connection2903
            [
                position = 0, 0
                breakpoints = 8760, 8192; 8760, 8168
            ]
            connect "P(f) k1.out" "DER (Generic) Control Join.P(f) k1" as Connection2904
            [
                position = 0, 0
                breakpoints = 8632, 8128; 8760, 8128; 8760, 8152
            ]
            connect ui_in "DER (Generic) Output Split.ui_in" as Connection2905
            connect Enable_fb.in "DER (Generic) Output Split.Enable_fb" as Connection2906
            connect "DER (Generic) Output Split.Pref_fb_kW" Pref_fb_kW.in as Connection2907
            connect Qref_fb_kVAr.in "DER (Generic) Output Split.Qref_fb_kVAr" as Connection2908
            connect "DER (Generic) Output Split.Pnom_kW" Pnom_kW.in as Connection2911
            connect Qnom_kVAr.in "DER (Generic) Output Split.Qnom_kVAr" as Connection2912
            connect "DER (Generic) Output Split.Snom_kVA" Snom_kVA.in as Connection2913
            connect Fmeas_Hz.in "DER (Generic) Output Split.Fmeas_Hz" as Connection2914
            connect "DER (Generic) Output Split.Vgrid_rms_meas_kV" Vgrid_rms_meas_kV.in as Connection2915
            connect "DER (Generic) Output Split.Pmeas_kW" Pmeas_kW.in as Connection2916
            connect Qmeas_kVAr.in "DER (Generic) Output Split.Qmeas_kVAr" as Connection2917
            connect "DER (Generic) Output Split.Smeas_kVA" Smeas_kVA.in as Connection2918
            connect PFmeas.in "DER (Generic) Output Split.PFmeas" as Connection2919
            connect "DER (Generic) Output Split.Vload_rms_meas_V" Vload_rms_meas_V.in as Connection2920
            connect MCB_status.in "DER (Generic) Output Split.MCB_status" as Connection2921
            connect "DER (Generic) Output Split.alarm_msg" alarm_msg.in as Connection2922
            connect ext "DER (Generic) External Join1.ext" as Connection2923
            connect "V alarm upper limit.out" "DER (Generic) Control Join.V alarm upper limit" as Connection2924
            [
                position = 0, 0
                breakpoints = 8800, 8480; 8800, 8248
            ]
            connect "V alarm lower limit.out" "DER (Generic) Control Join.V alarm lower limit" as Connection2925
            [
                position = 0, 0
                breakpoints = 8808, 8536; 8808, 8264
            ]
            connect "F alarm upper limit.out" "DER (Generic) Control Join.F alarm upper limit" as Connection2926
            [
                position = 0, 0
                breakpoints = 8816, 8592; 8816, 8280
            ]
            connect "F alarm lower limit.out" "DER (Generic) Control Join.F alarm lower limit" as Connection2927
            [
                position = 0, 0
                breakpoints = 8824, 8648; 8824, 8296
            ]
            connect "S alarm upper limit.out" "DER (Generic) Control Join.S alarm upper limit" as Connection2928
            [
                position = 0, 0
                breakpoints = 8832, 8704; 8832, 8312
            ]
            connect "I alarm upper limit.out" "DER (Generic) Control Join.I alarm upper limit" as Connection2929

            mask {
                icon = "image(\'variable_load_generic_ui.svg\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">User Interface subsystem intended to be used with \"Load (Generic)\" component.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9248, 9088
            size = 56, 136
        ]

        component "core/Transmission Line" "RL coupled Load1" {
            C_sequence_metric = "[[10.55e-9, -7.717343574912541e-25, -7.717343574912541e-25], [-5.6170616882174405e-25, 17.95e-9, -1.1234123376434881e-24], [0.0, -5.6170616882174405e-25, 17.95e-9]]"
            L_metric = "[[0.00189, 0.00109, 0.00109], [0.00109, 0.00189, 0.00109], [0.00109, 0.00109, 0.00189]]"
            L_sequence_metric = "[[6.09e-3, 0.0, 0.0], [0.0, 2.38e-3, 0.0], [0.0, 0.0, 2.38e-3]]"
            Length_metric = "0.2898"
            R_metric = "[[0.3570, 0.0451, 0.0451], [0.0451, 0.3570, 0.0451], [0.0451, 0.0451, 0.3570]]"
            R_sequence_metric = "[[0.5157, 0.0, 0.0], [0.0,  0.20631, 0.0], [0.0, 0.0,  0.20631]]"
            model_def = "RLC"
            unit_sys = "metric"
        }
        [
            position = 9384, 8720
            rotation = left
            size = 256, 72
        ]

        component Subsystem "Meter (EV1)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7872, 7424
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7896, 7456
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 7920, 7488
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 7944, 7528
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 7968, 7560
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 7992, 7592
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 8016, 7624
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 8016, 7752
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 7992, 7784
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 7968, 7816
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 7944, 7848
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 7920, 7880
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7896, 7912
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7864, 7936
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7896, 8024
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 7920, 8056
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 7944, 8096
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 7968, 8128
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 7992, 8160
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 8016, 8192
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 8016, 8320
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 7992, 8352
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 7968, 8384
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 7944, 8416
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 7920, 8448
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7896, 8480
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7768, 7688
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7776, 8240
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7360, 7936
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 8032
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7504, 8032
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7936
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7936
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7840
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7840
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7432, 7776
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7616, 7688
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7640, 8240
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 9384, 8952
            rotation = right
            size = 48, 136
        ]

        component "core/Variable Load (Generic)" "Variable EV2 (Generic)" {
            Pnom = "40e3"
            Snom = "41e3"
            Vnom_LL = "480"
            Vnom_sec_LL = "11900"
            fnom = "60"
            include_transformer = "True"
            resistance_cont = "1.0"
        }
        [
            position = 9776, 9096
            size = 184, 144
        ]

        component Subsystem "Variable EV2 (Generic) UI" {
            layout = dynamic
            component gen_probe Enable_fb {
            }
            [
                position = 7952, 8024
            ]

            component gen_probe PFmeas {
                streaming_en = "True"
            }
            [
                position = 7600, 8200
            ]

            component src_scada_input Qref {
                execution_rate = "inherit"
                max = "1e8"
                min = "-1e8"
                unit = "pu"
            }
            [
                position = 8600, 7736
            ]

            component src_scada_input Enable {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7568
            ]

            component src_scada_input Pref {
                execution_rate = "inherit"
                max = "1e8"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 7680
            ]

            component gen_probe Vload_rms_meas_V {
                streaming_en = "True"
            }
            [
                position = 7568, 8216
            ]

            component gen_probe Qmeas_kVAr {
                streaming_en = "True"
            }
            [
                position = 7664, 8168
            ]

            component gen_probe Smeas_kVA {
            }
            [
                position = 7632, 8184
            ]

            component gen_probe Pnom_kW {
            }
            [
                position = 7856, 8072
            ]

            component gen_probe Qref_fb_kVAr {
                streaming_en = "True"
            }
            [
                position = 7888, 8056
            ]

            component gen_probe Snom_kVA {
            }
            [
                position = 7792, 8104
            ]

            component gen_probe Fmeas_Hz {
                streaming_en = "True"
            }
            [
                position = 7760, 8120
            ]

            component gen_probe Pref_fb_kW {
                streaming_en = "True"
            }
            [
                position = 7920, 8040
            ]

            component gen_probe Qnom_kVAr {
            }
            [
                position = 7824, 8088
            ]

            component gen_probe Vgrid_rms_meas_kV {
            }
            [
                position = 7728, 8136
            ]

            component gen_probe Pmeas_kW {
                streaming_en = "True"
            }
            [
                position = 7696, 8152
            ]

            component gen_probe MCB_status {
            }
            [
                position = 7536, 8232
            ]

            component gen_probe alarm_msg {
            }
            [
                position = 7504, 8248
            ]

            component src_scada_input "Reset alarms" {
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7624
            ]

            component src_scada_input "Pref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7792
            ]

            component src_scada_input "Qref rate of change" {
                def_value = "0.1"
                execution_rate = "inherit"
                min = "0"
                unit = "pu/s"
            }
            [
                position = 8600, 7848
            ]

            component src_scada_input "P dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7904
            ]

            component src_scada_input "Q dependency type" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "2"
                min = "0"
                unit = ""
            }
            [
                position = 8600, 7960
            ]

            component src_scada_input "P(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8016
            ]

            component src_scada_input "P(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8072
            ]

            component src_scada_input "Q(V) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8248
            ]

            component src_scada_input "Q(V) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8304
            ]

            component src_scada_input "P(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8128
            ]

            component src_scada_input "P(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8192
            ]

            component src_scada_input "Q(f) k1" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = ""
            }
            [
                position = 8600, 8360
            ]

            component src_scada_input "Q(f) k2" {
                def_value = "0.0"
                execution_rate = "inherit"
                max = "100"
                min = "-100"
                unit = "1/pu"
            }
            [
                position = 8600, 8416
            ]

            component "core/DER (Generic) Control Join" "DER (Generic) Control Join" {
                Enable = "True"
                F_alarm_lower_limit = "True"
                F_alarm_upper_limit = "True"
                I_alarm_upper_limit = "True"
                P_V_k1 = "True"
                P_V_k2 = "True"
                P_dependency_type = "True"
                P_f_k1 = "True"
                P_f_k2 = "True"
                Pref = "True"
                Pref_rate_of_change = "True"
                Q_V_k1 = "True"
                Q_V_k2 = "True"
                Q_dependency_type = "True"
                Q_f_k1 = "True"
                Q_f_k2 = "True"
                Qref = "True"
                Qref_rate_of_change = "True"
                Reset_alarms = "True"
                S_alarm_upper_limit = "True"
                V_alarm_lower_limit = "True"
                V_alarm_upper_limit = "True"
                component_select = "Variable Load"
            }
            [
                position = 8952, 8160
                size = 192, 368
            ]

            component "core/DER (Generic) Output Split" "DER (Generic) Output Split" {
                Enable_fb = "True"
                Fmeas_Hz = "True"
                Fref_fb_Hz = "True"
                MCB_status = "True"
                PFmeas = "True"
                Pmeas_kW = "True"
                Pnom_kW = "True"
                Pref_fb_kW = "True"
                Qmeas_kVAr = "True"
                Qnom_kVAr = "True"
                Qref_fb_kVAr = "True"
                Smeas_kVA = "True"
                Snom_kVA = "True"
                Vgrid_rms_meas_kV = "True"
                Vload_rms_meas_V = "True"
                Vrms_ref_fb_V = "True"
                alarm_msg = "True"
                component_select = "Variable Load"
            }
            [
                position = 7312, 8136
                size = 128, 288
            ]

            component "core/DER (Generic) External Join" "DER (Generic) External Join1" {
                component_select = "Variable Load"
            }
            [
                position = 8952, 8936
                size = 192, 64
            ]

            component src_scada_input "V alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8480
            ]

            component src_scada_input "V alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8536
            ]

            component src_scada_input "F alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8592
            ]

            component src_scada_input "F alarm lower limit" {
                def_value = "0.5"
                execution_rate = "inherit"
                max = "1"
                min = "0"
                unit = "pu"
            }
            [
                position = 8600, 8648
            ]

            component src_scada_input "S alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8704
            ]

            component src_scada_input "I alarm upper limit" {
                def_value = "1.5"
                execution_rate = "inherit"
                min = "1"
                unit = "pu"
            }
            [
                position = 8600, 8760
            ]

            port ui_in {
                label = "ui_in"
                position = right:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7136, 8136
            ]

            port ui_out {
                label = "ui_out"
                position = right:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9112, 8160
            ]

            port ext {
                label = "ext"
                position = right:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9128, 8936
            ]

            connect "DER (Generic) Control Join.ui_out" ui_out as Connection2888
            connect Enable.out "DER (Generic) Control Join.Enable" as Connection2889
            connect "Reset alarms.out" "DER (Generic) Control Join.Reset alarms" as Connection2890
            [
                position = 0, 0
                breakpoints = 8832, 7752; 8832, 8008
            ]
            connect Pref.out "DER (Generic) Control Join.Pref" as Connection2891
            [
                position = 0, 0
                breakpoints = 8824, 7808; 8824, 8024
            ]
            connect Qref.out "DER (Generic) Control Join.Qref" as Connection2892
            [
                position = 0, 0
                breakpoints = 8816, 7864; 8816, 8040
            ]
            connect "Pref rate of change.out" "DER (Generic) Control Join.Pref rate of change" as Connection2893
            [
                position = 0, 0
                breakpoints = 8808, 7920; 8808, 8056
            ]
            connect "Qref rate of change.out" "DER (Generic) Control Join.Qref rate of change" as Connection2894
            [
                position = 0, 0
                breakpoints = 8800, 7976; 8800, 8072
            ]
            connect "P dependency type.out" "DER (Generic) Control Join.P dependency type" as Connection2895
            [
                position = 0, 0
                breakpoints = 8792, 8032; 8792, 8088
            ]
            connect "Q dependency type.out" "DER (Generic) Control Join.Q dependency type" as Connection2896
            [
                position = 0, 0
                breakpoints = 8784, 8088; 8784, 8104
            ]
            connect "P(V) k1.out" "DER (Generic) Control Join.P(V) k1" as Connection2897
            [
                position = 0, 0
                breakpoints = 8776, 8040; 8776, 8120
            ]
            connect "P(V) k2.out" "DER (Generic) Control Join.P(V) k2" as Connection2898
            [
                position = 0, 0
                breakpoints = 8768, 8096; 8768, 8136
            ]
            connect "Q(f) k2.out" "DER (Generic) Control Join.Q(f) k2" as Connection2899
            [
                position = 0, 0
                breakpoints = 8792, 8416; 8792, 8232
            ]
            connect "Q(f) k1.out" "DER (Generic) Control Join.Q(f) k1" as Connection2900
            [
                position = 0, 0
                breakpoints = 8784, 8360; 8784, 8216
            ]
            connect "Q(V) k2.out" "DER (Generic) Control Join.Q(V) k2" as Connection2901
            [
                position = 0, 0
                breakpoints = 8776, 8304; 8776, 8200
            ]
            connect "Q(V) k1.out" "DER (Generic) Control Join.Q(V) k1" as Connection2902
            [
                position = 0, 0
                breakpoints = 8768, 8248; 8768, 8184
            ]
            connect "P(f) k2.out" "DER (Generic) Control Join.P(f) k2" as Connection2903
            [
                position = 0, 0
                breakpoints = 8760, 8192; 8760, 8168
            ]
            connect "P(f) k1.out" "DER (Generic) Control Join.P(f) k1" as Connection2904
            [
                position = 0, 0
                breakpoints = 8632, 8128; 8760, 8128; 8760, 8152
            ]
            connect ui_in "DER (Generic) Output Split.ui_in" as Connection2905
            connect Enable_fb.in "DER (Generic) Output Split.Enable_fb" as Connection2906
            connect "DER (Generic) Output Split.Pref_fb_kW" Pref_fb_kW.in as Connection2907
            connect Qref_fb_kVAr.in "DER (Generic) Output Split.Qref_fb_kVAr" as Connection2908
            connect "DER (Generic) Output Split.Pnom_kW" Pnom_kW.in as Connection2911
            connect Qnom_kVAr.in "DER (Generic) Output Split.Qnom_kVAr" as Connection2912
            connect "DER (Generic) Output Split.Snom_kVA" Snom_kVA.in as Connection2913
            connect Fmeas_Hz.in "DER (Generic) Output Split.Fmeas_Hz" as Connection2914
            connect "DER (Generic) Output Split.Vgrid_rms_meas_kV" Vgrid_rms_meas_kV.in as Connection2915
            connect "DER (Generic) Output Split.Pmeas_kW" Pmeas_kW.in as Connection2916
            connect Qmeas_kVAr.in "DER (Generic) Output Split.Qmeas_kVAr" as Connection2917
            connect "DER (Generic) Output Split.Smeas_kVA" Smeas_kVA.in as Connection2918
            connect PFmeas.in "DER (Generic) Output Split.PFmeas" as Connection2919
            connect "DER (Generic) Output Split.Vload_rms_meas_V" Vload_rms_meas_V.in as Connection2920
            connect MCB_status.in "DER (Generic) Output Split.MCB_status" as Connection2921
            connect "DER (Generic) Output Split.alarm_msg" alarm_msg.in as Connection2922
            connect ext "DER (Generic) External Join1.ext" as Connection2923
            connect "V alarm upper limit.out" "DER (Generic) Control Join.V alarm upper limit" as Connection2924
            [
                position = 0, 0
                breakpoints = 8800, 8480; 8800, 8248
            ]
            connect "V alarm lower limit.out" "DER (Generic) Control Join.V alarm lower limit" as Connection2925
            [
                position = 0, 0
                breakpoints = 8808, 8536; 8808, 8264
            ]
            connect "F alarm upper limit.out" "DER (Generic) Control Join.F alarm upper limit" as Connection2926
            [
                position = 0, 0
                breakpoints = 8816, 8592; 8816, 8280
            ]
            connect "F alarm lower limit.out" "DER (Generic) Control Join.F alarm lower limit" as Connection2927
            [
                position = 0, 0
                breakpoints = 8824, 8648; 8824, 8296
            ]
            connect "S alarm upper limit.out" "DER (Generic) Control Join.S alarm upper limit" as Connection2928
            [
                position = 0, 0
                breakpoints = 8832, 8704; 8832, 8312
            ]
            connect "I alarm upper limit.out" "DER (Generic) Control Join.I alarm upper limit" as Connection2929

            mask {
                icon = "image(\'variable_load_generic_ui.svg\')"
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">User Interface subsystem intended to be used with \"Load (Generic)\" component.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 9616, 9096
            size = 56, 136
        ]

        component Subsystem "Meter (EV2)" {
            layout = dynamic
            component gen_probe VAn {
            }
            [
                position = 7872, 7424
                rotation = left
            ]

            component gen_probe VBn {
            }
            [
                position = 7896, 7456
                rotation = left
            ]

            component gen_probe VCn {
            }
            [
                position = 7920, 7488
                rotation = left
            ]

            component gen_probe VAB {
            }
            [
                position = 7944, 7528
                rotation = left
            ]

            component gen_probe VBC {
            }
            [
                position = 7968, 7560
                rotation = left
            ]

            component gen_probe VCA {
            }
            [
                position = 7992, 7592
                rotation = left
            ]

            component gen_probe VAn_RMS1 {
            }
            [
                position = 8016, 7624
                rotation = left
            ]

            component gen_probe VBn_RMS1 {
            }
            [
                position = 8016, 7752
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCn_RMS1 {
            }
            [
                position = 7992, 7784
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLn_RMS {
            }
            [
                position = 7968, 7816
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VAB_RMS1 {
            }
            [
                position = 7944, 7848
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VBC_RMS1 {
            }
            [
                position = 7920, 7880
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VCA_RMS1 {
            }
            [
                position = 7896, 7912
                rotation = left
                scale = -1, -1
            ]

            component gen_probe VLL_RMS1 {
            }
            [
                position = 7864, 7936
                rotation = left
                scale = -1, -1
            ]

            component gen_probe IA {
            }
            [
                position = 7896, 8024
                rotation = left
            ]

            component gen_probe IB {
            }
            [
                position = 7920, 8056
                rotation = left
            ]

            component gen_probe IC {
            }
            [
                position = 7944, 8096
                rotation = left
            ]

            component gen_probe Freq {
            }
            [
                position = 7968, 8128
                rotation = left
            ]

            component gen_probe IA_RMS1 {
            }
            [
                position = 7992, 8160
                rotation = left
            ]

            component gen_probe IB_RMS1 {
            }
            [
                position = 8016, 8192
                rotation = left
            ]

            component gen_probe IC_RMS1 {
            }
            [
                position = 8016, 8320
                rotation = left
                scale = -1, -1
            ]

            component gen_probe I_RMS1 {
            }
            [
                position = 7992, 8352
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_P1 {
            }
            [
                position = 7968, 8384
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_Q1 {
            }
            [
                position = 7944, 8416
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_S1 {
            }
            [
                position = 7920, 8448
                rotation = left
                scale = -1, -1
            ]

            component gen_probe POWER_PF1 {
            }
            [
                position = 7896, 8480
                rotation = left
                scale = -1, -1
            ]

            component "core/Meter Split" "Meter Split2" {
                vab = "True"
                vab_rms = "True"
                van_rms = "True"
                vbc = "True"
                vbc_rms = "True"
                vbn_rms = "True"
                vca = "True"
                vca_rms = "True"
                vcn_rms = "True"
                vll_rms = "True"
                vln_rms = "True"
            }
            [
                position = 7768, 7688
                size = 96, 240
            ]

            component "core/Meter Split" "Meter Split3" {
                freq = "True"
                i_rms = "True"
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                power_p = "True"
                power_pf = "True"
                power_q = "True"
                power_s = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 7776, 8240
                size = 96, 240
            ]

            component "core/Three-phase Meter" "Three-phase Meter" {
                I_avg_rms = "True"
                I_rms = "True"
                P_meas = "True"
                P_method = "RMS based"
                R = "10e3"
                VAB = "True"
                VBC = "True"
                VCA = "True"
                VLL_avg_rms = "True"
                VLL_rms = "True"
                VLn_avg_rms = "True"
                VLn_rms = "True"
                freq = "True"
            }
            [
                position = 7360, 7936
                size = 56, 240
            ]

            port C {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 8032
            ]

            port c {
                position = right:auto
                kind = pe
            }
            [
                position = 7504, 8032
                scale = -1, 1
            ]

            port B {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7936
            ]

            port b {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7936
                scale = -1, 1
            ]

            port A {
                position = left:auto
                kind = pe
            }
            [
                position = 7224, 7840
            ]

            port a {
                position = right:auto
                kind = pe
            }
            [
                position = 7496, 7840
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Out"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7432, 7776
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7616, 7688
                hide_name = True
                size = 60, 20
            ]

            tag From3 {
                value = "Out"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7640, 8240
                hide_name = True
                size = 60, 20
            ]

            connect From2 "Meter Split2.Input" as Connection63
            connect From3 "Meter Split3.Input" as Connection29
            connect Goto2 "Three-phase Meter.Out" as Connection27
            connect IA_RMS1.in "Meter Split3.IA_RMS" as Connection38
            connect I_RMS1.in "Meter Split3.I_RMS" as Connection44
            connect "Meter Split3.Freq" Freq.in as Connection39
            connect "Meter Split3.IA" IA.in as Connection42
            connect "Meter Split3.IB" IB.in as Connection41
            connect "Meter Split3.IB_RMS" IB_RMS1.in as Connection37
            connect "Meter Split3.IC" IC.in as Connection40
            connect "Meter Split3.IC_RMS" IC_RMS1.in as Connection43
            connect POWER_P1.in "Meter Split3.POWER_P" as Connection45
            connect POWER_PF1.in "Meter Split3.POWER_PF" as Connection48
            connect POWER_Q1.in "Meter Split3.POWER_Q" as Connection46
            connect POWER_S1.in "Meter Split3.POWER_S" as Connection47
            connect VAB.in "Meter Split2.VAB" as Connection23
            connect VAB_RMS1.in "Meter Split2.VAB_RMS" as Connection64
            connect VAn.in "Meter Split2.VAn" as Connection20
            connect VAn_RMS1.in "Meter Split2.VAn_RMS" as Connection26
            connect VBC.in "Meter Split2.VBC" as Connection24
            connect VBC_RMS1.in "Meter Split2.VBC_RMS" as Connection65
            connect VBn.in "Meter Split2.VBn" as Connection21
            connect VBn_RMS1.in "Meter Split2.VBn_RMS" as Connection30
            connect VCA.in "Meter Split2.VCA" as Connection25
            connect VCA_RMS1.in "Meter Split2.VCA_RMS" as Connection66
            connect VCn.in "Meter Split2.VCn" as Connection22
            connect VCn_RMS1.in "Meter Split2.VCn_RMS" as Connection31
            connect VLL_RMS1.in "Meter Split2.VLL_RMS" as Connection36
            connect VLn_RMS.in "Meter Split2.VLn_RMS" as Connection32
            connect "Three-phase Meter.A-" a as Connection67
            connect A "Three-phase Meter.A+" as Connection68
            connect "Three-phase Meter.B+" B as Connection69
            connect "Three-phase Meter.B-" b as Connection70
            connect c "Three-phase Meter.C-" as Connection71
            connect "Three-phase Meter.C+" C as Connection72
        }
        [
            position = 9752, 8960
            rotation = right
            size = 48, 136
        ]

        junction Junction4 pe
        [
            position = 8144, 8504
        ]

        junction Junction5 pe
        [
            position = 8160, 8528
        ]

        junction Junction7 pe
        [
            position = 8584, 8504
        ]

        junction Junction8 pe
        [
            position = 8600, 8528
        ]

        junction Junction9 pe
        [
            position = 8176, 8544
        ]

        junction Junction10 pe
        [
            position = 8616, 8544
        ]

        junction Junction11 pe
        [
            position = 8144, 8504
        ]

        junction Junction12 pe
        [
            position = 8160, 8528
        ]

        junction Junction13 pe
        [
            position = 8176, 8544
        ]

        junction Junction14 pe
        [
            position = 8992, 8496
        ]

        junction Junction15 pe
        [
            position = 9008, 8528
        ]

        junction Junction16 pe
        [
            position = 9024, 8544
        ]

        junction Junction17 pe
        [
            position = 9336, 8904
        ]

        junction Junction18 pe
        [
            position = 9384, 8888
        ]

        junction Junction19 pe
        [
            position = 9440, 8872
        ]

        connect "Grid UI1.ui_in" Grid1.ui_in as Connection7
        connect "Grid UI1.ui_out" Grid1.ui_out as Connection8
        connect "Diesel Genset (Generic)1.Out1" "Diesel Genset (Generic) UI1.ui_in" as Connection554
        connect "Diesel Genset (Generic) UI1.ui_out" "Diesel Genset (Generic)1.In2" as Connection555
        connect "Diesel Genset (Generic) UI1.ext" "Diesel Genset (Generic)1.In3" as Connection556
        connect "Variable Load (Generic) UI1.ui_in" "Variable Load (Generic)1.Out1" as Connection44
        connect "Variable Load (Generic)1.In2" "Variable Load (Generic) UI1.ui_out" as Connection45
        connect "Variable Load (Generic)1.ext" "Variable Load (Generic) UI1.ext" as Connection46
        connect "Battery ESS (Generic) UI1.ui_in" "Battery ESS (Generic)1.ui_in" as Connection584
        connect "Battery ESS (Generic)1.ui_out" "Battery ESS (Generic) UI1.ui_out" as Connection585
        connect "Battery ESS (Generic)1.ext_inputs" "Battery ESS (Generic) UI1.ext" as Connection9
        connect "PV Power Plant (Generic) UI1.ui_in" "PV Power Plant (Generic)1.ui_in" as Connection6
        connect "PV Power Plant (Generic) UI1.ui_out" "PV Power Plant (Generic)1.ui_out" as Connection124
        connect "PV Power Plant (Generic) UI1.ext" "PV Power Plant (Generic)1.ext_inputs" as Connection125
        connect "Core coupling.a" "PV Power Plant (Generic)1.A" as Connection781
        connect "Core coupling.b" "PV Power Plant (Generic)1.B" as Connection782
        connect "Core coupling.c" "PV Power Plant (Generic)1.C" as Connection783
        connect "RL coupled Grid.c_out" PCC.A as Connection841
        connect PCC.B "RL coupled Grid.b_out" as Connection842
        connect "RL coupled Grid.a_out" PCC.C as Connection843
        connect "RL coupled Grid.c_in" Grid1.A as Connection844
        connect "RL coupled Grid.b_in" Grid1.B as Connection845
        connect "RL coupled Grid.a_in" Grid1.C as Connection846
        connect "RL coupled DG.a_out" Junction4 as Connection871
        connect "RL coupled DG.b_out" Junction5 as Connection874
        connect "RL coupled BESS.a_out" Junction7 as Connection883
        connect Junction7 Junction4 as Connection884
        connect "RL coupled BESS.b_out" Junction8 as Connection890
        connect Junction8 Junction5 as Connection891
        connect Junction9 "RL coupled DG.c_out" as Connection903
        [
            breakpoints = 8176, 8544; 8176, 8544
        ]
        connect "RL coupled BESS.c_out" Junction10 as Connection905
        connect Junction10 Junction9 as Connection906
        connect "Meter (DG).A" "RL coupled DG.a_in" as Connection908
        connect "RL coupled DG.b_in" "Meter (DG).B" as Connection909
        connect "RL coupled DG.c_in" "Meter (DG).C" as Connection910
        [
            breakpoints = 7776, 8840; 7808, 8840
        ]
        connect "Meter (DG).a" "Diesel Genset (Generic)1.A" as Connection911
        connect "Meter (DG).b" "Diesel Genset (Generic)1.B" as Connection912
        connect "Meter (DG).c" "Diesel Genset (Generic)1.C" as Connection913
        connect "RL coupled Load.a_in" "Meter (Load).A" as Connection914
        [
            breakpoints = 8144, 8864; 8112, 8864
        ]
        connect "Meter (Load).B" "RL coupled Load.b_in" as Connection915
        connect "RL coupled Load.c_in" "Meter (Load).C" as Connection916
        [
            breakpoints = 8176, 8864; 8208, 8864
        ]
        connect "Meter (Load).a" "Variable Load (Generic)1.A" as Connection917
        connect "Meter (Load).b" "Variable Load (Generic)1.B" as Connection918
        connect "Meter (Load).c" "Variable Load (Generic)1.C" as Connection919
        connect "Meter (BESS).A" "RL coupled BESS.a_in" as Connection920
        [
            breakpoints = 8552, 8864; 8584, 8864
        ]
        connect "RL coupled BESS.b_in" "Meter (BESS).B" as Connection921
        connect "Meter (BESS).a" "Battery ESS (Generic)1.A" as Connection923
        connect "Meter (BESS).b" "Battery ESS (Generic)1.B" as Connection924
        connect "Meter (BESS).c" "Battery ESS (Generic)1.C" as Connection925
        connect "Meter (PV).a" "Core coupling.A" as Connection927
        connect "Meter (PV).b" "Core coupling.B" as Connection928
        connect "Meter (PV).c" "Core coupling.C" as Connection929
        connect "Meter (PV).A" "RL coupled PV.a_in" as Connection930
        connect "RL coupled PV.b_in" "Meter (PV).B" as Connection931
        connect "RL coupled PV.c_in" "Meter (PV).C" as Connection932
        [
            breakpoints = 9024, 8832; 9056, 8832
        ]
        connect "RL coupled BESS.c_in" "Meter (BESS).C" as Connection933
        [
            breakpoints = 8616, 8864; 8648, 8864
        ]
        connect PCC.a "Meter (PCC).A" as Connection937
        connect PCC.b "Meter (PCC).B" as Connection938
        connect PCC.c "Meter (PCC).C" as Connection939
        connect Junction4 Junction11 as Connection940
        connect Junction11 "RL coupled Load.a_out" as Connection941
        [
            breakpoints = 8144, 8504; 8144, 8504
        ]
        connect "Meter (PCC).a" Junction11 as Connection942
        connect "RL coupled Load.b_out" Junction12 as Connection947
        connect Junction12 Junction5 as Connection948
        [
            breakpoints = 8160, 8528; 8160, 8528; 8168, 8528
        ]
        connect "Meter (PCC).b" Junction12 as Connection949
        connect Junction9 Junction13 as Connection950
        connect Junction13 "RL coupled Load.c_out" as Connection951
        [
            breakpoints = 8176, 8544; 8176, 8544
        ]
        connect "Meter (PCC).c" Junction13 as Connection952
        connect "Variable EV1 (Generic) UI.ui_in" "Variable EV1 (Generic).Out1" as Connection953
        connect "Variable EV1 (Generic).In2" "Variable EV1 (Generic) UI.ui_out" as Connection954
        connect "Variable EV1 (Generic).ext" "Variable EV1 (Generic) UI.ext" as Connection955
        connect "Meter (EV1).a" "Variable EV1 (Generic).A" as Connection959
        connect "Meter (EV1).b" "Variable EV1 (Generic).B" as Connection960
        connect "Meter (EV1).c" "Variable EV1 (Generic).C" as Connection961
        connect "Variable EV2 (Generic) UI.ui_in" "Variable EV2 (Generic).Out1" as Connection962
        connect "Variable EV2 (Generic).In2" "Variable EV2 (Generic) UI.ui_out" as Connection963
        connect "Variable EV2 (Generic).ext" "Variable EV2 (Generic) UI.ext" as Connection964
        connect "Meter (EV2).a" "Variable EV2 (Generic).A" as Connection965
        connect "Meter (EV2).b" "Variable EV2 (Generic).B" as Connection966
        connect "Meter (EV2).c" "Variable EV2 (Generic).C" as Connection967
        connect "RL coupled PV.a_out" Junction14 as Connection968
        connect Junction14 Junction7 as Connection969
        connect "RL coupled Load1.a_out" Junction14 as Connection970
        connect "RL coupled PV.b_out" Junction15 as Connection971
        connect Junction15 Junction8 as Connection972
        connect "RL coupled Load1.b_out" Junction15 as Connection973
        connect "RL coupled PV.c_out" Junction16 as Connection974
        connect Junction16 Junction10 as Connection975
        connect "RL coupled Load1.c_out" Junction16 as Connection976
        connect "RL coupled Load1.a_in" Junction17 as Connection977
        [
            breakpoints = 9368, 8872; 9336, 8872
        ]
        connect Junction17 "Meter (EV1).A" as Connection978
        connect "Meter (EV2).A" Junction17 as Connection979
        connect "Meter (EV1).B" Junction18 as Connection980
        connect Junction18 "RL coupled Load1.b_in" as Connection981
        connect "Meter (EV2).B" Junction18 as Connection982
        connect "RL coupled Load1.c_in" Junction19 as Connection983
        [
            breakpoints = 9400, 8872
        ]
        connect Junction19 "Meter (EV1).C" as Connection984
        [
            breakpoints = 9432, 8872
        ]
        connect "Meter (EV2).C" Junction19 as Connection985
    }

    default {
        gen_probe {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
            param_set = ""
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Battery ESS (Generic)" {
            Pnom = "20e3"
            Snom = "40e3"
            Vnom_LL = "400"
            fnom = "50"
            include_transformer = "True"
            Vnom_sec_LL = "2300"
            wL_pu = "0.1"
            Zt_pu = "0.04"
            dc_link_margin = "0.4"
            opc_pu = "0.0"
            Rshunt_pu = "2000"
            Tfast = "100e-6"
            Tslow = "500e-6"
            Sg_sc_pu = "20"
            PFg = "0.1"
            cont_type = "Ideal"
            resistance_cont = "1.0"
            nom_batt_voltage = "200"
            nom_batt_capacity = "120"
            soc_range = "[10, 90]"
            grid_code_fcn = "LVRT"
            lvrt_req = "Germany"
            vs_lvrt = "[0.0, 0.9, 0.901]"
            ts_lvrt = "[0.15, 1.5, 1.501]"
            preview = "Plot LVRT curve"
            voltvar_req = "Custom"
            vs_voltvar = "[0.6, 0.9, 1.1, 1.3]"
            qs_voltvar = "[1.3, 0.0, 0.0, -0.7]"
            preview_voltvar = "Plot VoltVAr curve"
            hzwatt_req = "Custom"
            fs_hzwatt = "[47.5, 47.8, 49.8, 50.2, 51.5]"
            ps_hzwatt = "[2.0, 2.0, 0.0, 0.0, -0.52]"
            preview_hzwatt = "Plot HzWatt curve"
            voltwatt_req = "Custom"
            vs_voltwatt = "[0.8, 1.06, 1.1, 1.3]"
            ps_voltwatt = "[1.0, 1.0, 0.2, 0.2]"
            preview_voltwatt = "Plot VoltWatt curve"
        }

        "core/DER (Generic) Control Join" {
            component_select = "Battery ESS"
            Enable = "False"
            Converter_mode = "False"
            Reset_alarms = "False"
            Pref = "False"
            Qref = "False"
            Frequency_droop_offset = "False"
            Frequency_droop_coeff = "False"
            Voltage_droop_coeff = "False"
            Vrms_ref = "False"
            Fref = "False"
            Max_SOC = "False"
            Min_SOC = "False"
            Pref_rate_of_change = "False"
            Qref_rate_of_change = "False"
            Vrms_ref_rate_of_change = "False"
            Fref_rate_of_change = "False"
            Pcurtailment = "False"
            Pcurtailment_rate_of_change = "False"
            MPPT_rate_of_change = "False"
            Enable_storm_control = "False"
            int1_wind_speed_max = "False"
            int2_wind_speed_max = "False"
            P_reduction_wind_speed__SC_ = "False"
            Average_wind_speed_max__SC_ = "False"
            Cut_out_wind_speed__SC_ = "False"
            time_interval_1 = "False"
            time_interval_2 = "False"
            Recovery_time = "False"
            time_interval__SC_ = "False"
            Operation_mode = "False"
            P_dependency_type = "False"
            Q_dependency_type = "False"
            P_V_k1 = "False"
            P_V_k2 = "False"
            P_f_k1 = "False"
            P_f_k2 = "False"
            Q_V_k1 = "False"
            Q_V_k2 = "False"
            Q_f_k1 = "False"
            Q_f_k2 = "False"
            LVRT_enable = "False"
            LVRT_Q_contribution = "False"
            LVRT_P_set = "False"
            V_alarm_upper_limit = "False"
            V_alarm_lower_limit = "False"
            F_alarm_upper_limit = "False"
            F_alarm_lower_limit = "False"
            S_alarm_upper_limit = "False"
            I_alarm_upper_limit = "False"
            I_alarm_timeout = "False"
            Drift_alarm_freq_bound = "False"
            Sync_timeout = "False"
            VoltVAr_enable = "False"
            HzWatt_enable = "False"
            VoltWatt_enable = "False"
        }

        "core/DER (Generic) External Join" {
            component_select = "Battery ESS"
            Initial_SOC = "False"
            Initial_SOH = "False"
            Temperature = "False"
            Irradiance = "False"
            Wind_speed = "False"
        }

        "core/DER (Generic) Output Split" {
            component_select = "Battery ESS"
            Enable_fb = "False"
            Converter_mode_fb = "False"
            MCB_status = "False"
            state = "False"
            alarm_msg = "False"
            Lvrt_active_status = "False"
            Pnom_kW = "False"
            Qnom_kVAr = "False"
            Snom_kVA = "False"
            Vnom_LL_V = "False"
            Fnom_Hz = "False"
            nom_wind_speed_m_per_s = "False"
            Pref_fb_kW = "False"
            Qref_fb_kVAr = "False"
            Vrms_ref_fb_V = "False"
            Fref_fb_Hz = "False"
            Pmeas_kW = "False"
            Pa_meas_kW = "False"
            Pb_meas_kW = "False"
            Pc_meas_kW = "False"
            Qmeas_kVAr = "False"
            Qa_meas_kVAr = "False"
            Qb_meas_kVAr = "False"
            Qc_meas_kVAr = "False"
            Smeas_kVA = "False"
            PFmeas = "False"
            Vgrid_rms_meas_kV = "False"
            Vconv_rms_meas_V = "False"
            Fmeas_Hz = "False"
            Ibatt_A = "False"
            Vbatt_V = "False"
            SOC = "False"
            SOH = "False"
            Available_Ppv_kW = "False"
            curtailment_status = "False"
            rotational_speed_RPM = "False"
            wind_speed_m_per_s = "False"
            turbine_stalled = "False"
            pitch_ctrl_on = "False"
            avg_wind_speed_1 = "False"
            avg_wind_speed_2 = "False"
            avg_wind_speed_sc = "False"
            prot_trip = "False"
            P_red_on = "False"
            P_cut_out = "False"
            Vgen_rms_meas_V = "False"
            Gen_speed_RPM = "False"
            Batt_cap_nom_Ah = "False"
            Vload_rms_meas_V = "False"
        }

        "core/Diesel Genset (Generic)" {
            Pnom = "1.2e6"
            Snom = "1.3e6"
            Vnom_LL = "400"
            fnom = "50"
            include_transformer = "False"
            Vnom_sec_LL = "400"
            Ls_pu = "0.1"
            wL_pu = "0"
            Zt_pu = "0.04"
            Rshunt_pu = "2000"
            Tfast = "100e-6"
            Tslow = "500e-6"
            Omega_nom = "1500"
        }

        "core/Grid" {
            Vb = "2300"
            f = "50"
            Sb = "20*40e3"
            pf = "0.1"
            Tfast = "100e-6"
            cont_type = "Ideal"
            resistance_cont = "0"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vn = "False"
            vn_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            ineutral = "False"
            in_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/PV Power Plant (Generic)" {
            Pnom = "250e3"
            Snom = "np.sqrt(2.0)*250e3"
            Vnom_LL = "400"
            fnom = "50"
            include_transformer = "True"
            Vnom_sec_LL = "13.8e3"
            ILR_factor = "1.2"
            wL_pu = "0.1"
            Zt_pu = "0.04"
            dc_link_margin = "0.4"
            opc_pu = "0.0"
            Rshunt_pu = "2000"
            Tfast = "100e-6"
            Tslow = "500e-6"
            Sg_sc_pu = "20"
            PFg = "0.1"
            cont_type = "Ideal"
            resistance_cont = "1.0"
            grid_code_fcn = "LVRT"
            lvrt_req = "Germany"
            vs_lvrt = "[0.0, 0.9, 0.901]"
            ts_lvrt = "[0.15, 1.5, 1.501]"
            preview = "Plot LVRT curve"
            voltvar_req = "Custom"
            vs_voltvar = "[0.6, 0.9, 1.1, 1.3]"
            qs_voltvar = "[1.3, 0.0, 0.0, -0.7]"
            preview_voltvar = "Plot VoltVAr curve"
            hzwatt_req = "Custom"
            fs_hzwatt = "[47.5, 47.8, 49.8, 50.2, 51.5]"
            ps_hzwatt = "[2.0, 2.0, 0.0, 0.0, -0.52]"
            preview_hzwatt = "Plot HzWatt curve"
            voltwatt_req = "Custom"
            vs_voltwatt = "[0.8, 1.06, 1.1, 1.3]"
            ps_voltwatt = "[1.0, 1.0, 0.2, 0.2]"
            preview_voltwatt = "Plot VoltWatt curve"
        }

        "core/Three Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            enable_bandwidth = "False"
            bandwidth = "10e3"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            VN = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            IN = "False"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            VN_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            IN_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            unit_sys_edited_flag = "0"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole Single Throw Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Variable Load (Generic)" {
            Pnom = "10e3"
            Snom = "np.sqrt(2)*10e3"
            Vnom_LL = "400"
            fnom = "50"
            include_transformer = "False"
            Vnom_sec_LL = "400"
            wL_pu = "0.1"
            Zt_pu = "0.04"
            dc_link_margin = "0.4"
            opc_pu = "0.2"
            Rshunt_pu = "2000"
            Sg_sc_pu = "20"
            PFg = "0.1"
            cont_type = "Ideal"
            resistance_cont = "0"
            Tfast = "100e-6"
            Tslow = "500e-6"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
    ENDCODE
}
